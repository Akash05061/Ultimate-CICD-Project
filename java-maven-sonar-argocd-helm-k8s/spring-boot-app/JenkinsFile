pipeline {
  agent {
    docker {
      image 'maven:3.9.6-eclipse-temurin-17'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    SONAR_URL = "http://34.207.223.184:9000"
    GIT_REPO_NAME = "Ultimate-CICD-Project"
    GIT_USER_NAME = "Akash05061"
  }
  stages {

    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/Akash05061/Ultimate-CICD-Project.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
  environment {
    SONAR_URL = "http://34.207.223.184:9000"
  }
  steps {
    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
      dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
        sh '''
          export SONAR_TOKEN=$SONAR_AUTH_TOKEN
          mvn sonar:sonar \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.host.url=$SONAR_URL \
            -Dsonar.projectKey=ultimate-cicd
        '''
      }
    }
  }
}


    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "akash501/ultimate-cicdd:${BUILD_NUMBER}"
      }
      steps {
        script {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh 'docker build -t ${DOCKER_IMAGE} .'
          }
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "asuttakoti@gmail.com"
            git config user.name "Akash B S"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
